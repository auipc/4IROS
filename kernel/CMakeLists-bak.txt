cmake_minimum_required(VERSION 3.13)
project(4IROS C CXX ASM)
set(CMAKE_CXX_STANDARD 17)

if (ARM_COMPILE)
	set(ARCH_SHIM_SRCS
		arch/arm/asm/boot.S
		arch/arm/init.cpp
	)
	set(ARCH_SRCS
		arch/arm/arm_main.cpp
	)
else()
	set(ARCH_SRCS
		arch/i386/asm/boot.S
        arch/i386/IO.h
		arch/i386/asm/interrupt.S
        arch/i386/kernel.h
	)

set(SRCS
        main.cpp
        mem/malloc.h
        mem/malloc.cpp
        printk.cpp
        gdt.h
        gdt.cpp
        idt.h
        idt.cpp
        PIC.cpp
        PIC.h
        mem/Paging.cpp
		mem/Paging.h
        assert.h
        mem/PageFrameAllocator.cpp
        mem/PageFrameAllocator.h
        util/Bitmap.cpp
        util/Bitmap.h
		util/NBitmap.cpp
		util/NBitmap.h
		util/MemBinTree.h
		util/MemBinTree.cpp
		util/Spinlock.cpp
		util/Spinlock.h
		util/Vec.h
        icxxabi.h
		icxxabi.cpp
        tasking/Process.cpp
        tasking/Process.h
		tasking/Scheduler.cpp
		tasking/Scheduler.h
		tasking/ELF.h
		tasking/ELF.cpp
		PIT.h
		PIT.cpp
		multiboot.h
		vfs/vfs.cpp
		vfs/vfs.h
		vfs/block/ata.cpp
		vfs/block/ata.h
		vfs/fs/ext2.h
		vfs/fs/ext2.cpp
		vfs/stddev.h
		vfs/stddev.cpp
		Debug.h
		Debug.cpp
		Syscall.h
		Syscall.cpp
		driver/PS2Keyboard.h
		driver/PS2Keyboard.cpp
)
endif()

if (ARM_COMPILE)
add_executable(4IROS ${ARCH_SRCS} ${SRCS})
add_executable(4IROS_SHIM ${ARCH_SHIM_SRCS} ${SRCS})
target_include_directories(4IROS_SHIM PRIVATE ${CMAKE_SOURCE_DIR}/)
else()
add_executable(4IROS ${ARCH_SRCS} ${SRCS})
endif()


target_include_directories(4IROS PRIVATE ${CMAKE_SOURCE_DIR}/)
if (NOT ARM_COMPILE)
target_include_directories(4IROS PRIVATE ${CMAKE_SOURCE_DIR}/libc)
target_link_libraries(4IROS ${LIBK_DIR}/libk.a)
endif()

if (NOT ARM_COMPILE)
target_link_options(4IROS PRIVATE LINKER:-T ${CMAKE_SOURCE_DIR}/kernel/linker.ld -nostdlib -nodefaultlibs)
set_target_properties(4IROS PROPERTIES LINK_DEPENDS ${CMAKE_SOURCE_DIR}/kernel/linker.ld)
else()
target_link_options(4IROS_SHIM PRIVATE LINKER:-T ${CMAKE_SOURCE_DIR}/kernel/arch/arm/shim.ld -nostdlib -nodefaultlibs)
set_target_properties(4IROS_SHIM PROPERTIES LINK_DEPENDS ${CMAKE_SOURCE_DIR}/kernel/arch/arm/shim.ld)
target_link_options(4IROS PRIVATE LINKER:-T ${CMAKE_SOURCE_DIR}/kernel/arch/arm/linker.ld -nostdlib -nodefaultlibs)
set_target_properties(4IROS PROPERTIES LINK_DEPENDS ${CMAKE_SOURCE_DIR}/kernel/arch/arm/linker.ld)
endif()
